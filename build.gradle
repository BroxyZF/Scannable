plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.0-SNAPSHOT" apply false
    id 'com.matthewprenger.cursegradle' version '1.4.0' apply false
    id 'com.modrinth.minotaur' version '2.2.0' apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }
}

def getGitRef() {
    try {
        final def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (final Throwable ignored) {
        return 'unknown'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'architectury-plugin'
    apply plugin: 'com.matthewprenger.cursegradle'
    apply plugin: 'com.modrinth.minotaur'
    apply plugin: 'maven-publish'

    archivesBaseName = "${rootProject.archives_base_name}-MC${rootProject.minecraft_version}-${project.name}"
    version = "${rootProject.semver}+${getGitRef()}"
    group = rootProject.maven_group

    repositories {
        maven {
            url 'https://cursemaven.com'
            content { includeGroup "curse.maven" }
        }
    }

    dependencies {
        compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${rootProject.archivesBaseName}" }
        }
    }

    idea {
        module {
            for (final String exclude in ['run', 'out', 'logs']) {
                excludeDirs += file(exclude)
            }
        }
    }
}

//dependencies {
//    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
//
//    // Just for in-dev convenience. Mod doesn't use any JEI APIs.
//    implementation fg.deobf("curse.maven:jei-238222:3884337")
//}

//minecraft {
//    mappings channel: 'official', version: minecraft_version
//
//    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
//
//    runs {
//        client {
//            workingDirectory project.file('run')
//
//            property 'forge.logging.markers', 'REGISTRIES'
//            property 'forge.logging.console.level', 'info'
//            property 'forge.enabledGameTestNamespaces', 'scannable'
//
//            mods {
//                scannable {
//                    source sourceSets.main
//                }
//            }
//        }
//
//        server {
//            workingDirectory project.file('run')
//
//            property 'forge.logging.markers', 'REGISTRIES'
//            property 'forge.logging.console.level', 'info'
//            property 'forge.enabledGameTestNamespaces', 'scannable'
//
//            mods {
//                scannable {
//                    source sourceSets.main
//                }
//            }
//        }
//
//        gameTestServer {
//            workingDirectory project.file('run')
//
//            property 'forge.logging.markers', 'REGISTRIES'
//            property 'forge.logging.console.level', 'info'
//            property 'forge.enabledGameTestNamespaces', 'scannable'
//
//            mods {
//                scannable {
//                    source sourceSets.main
//                }
//            }
//        }
//
//        data {
//            workingDirectory project.file('run')
//
//            property 'forge.logging.markers', 'REGISTRIES'
//            property 'forge.logging.console.level', 'info'
//
//            args '--mod', 'scannable', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')
//
//            mods {
//                scannable {
//                    source sourceSets.main
//                }
//            }
//        }
//    }
//}

//jar {
//    finalizedBy 'reobfJar'
//}

//task apiJar(type: Jar) {
//    archiveClassifier.set('api')
//    from sourceSets.main.allSource
//    from sourceSets.main.output
//    include 'li/cil/scannable/api/**'
//}
//
//artifacts {
//    archives apiJar
//}
//
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            groupId = project.group
//            artifactId = project.name
//            version = semver
//            artifact jar
//            artifact apiJar
//        }
//    }
//}
